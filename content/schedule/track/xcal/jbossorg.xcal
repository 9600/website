---
---
<?xml version="1.0" encoding="UTF-8"?>
<iCalendar xmlns:xCal="urn:ietf:params:xml:ns:xcal" xmlns:pentabarf="http://pentabarf.org">
  <vcalendar>
    <version>2.0</version>
    <prodid>-//Pentabarf//Schedule 1.0//EN</prodid>
    <x-wr-caldesc>Schedule for JBoss.org at FOSDEM 2012</x-wr-caldesc>
    <x-wr-calname>Schedule for sessions at </x-wr-calname>
    <vevent>
      <method>PUBLISH</method>
      <uid>571@FOSDEM12@pentabarf.org</uid>
      <pentabarf:event-id>571</pentabarf:event-id>
      <pentabarf:event-slug>boxgrinder_grind_your_appliances_easily</pentabarf:event-slug>
      <pentabarf:event-tag>boxgrinder_grind_your_appliances_easily</pentabarf:event-tag>
      <pentabarf:title>BoxGrinder : Grind your appliances easily</pentabarf:title>
      <pentabarf:subtitle></pentabarf:subtitle>
      <pentabarf:language>English</pentabarf:language>
      <pentabarf:language-code>en</pentabarf:language-code>
      <pentabarf:track>JBoss.org Devroom</pentabarf:track>
      <pentabarf:start>2012-02-04 11:00:00 +0100</pentabarf:start>
      <pentabarf:end>2012-02-04 11:55:00 +0100</pentabarf:end>
      <pentabarf:duration>00:55:00</pentabarf:duration>
      <dtstart>20120204T110000</dtstart>
      <dtend>20120204T115500</dtend>
      <duration>00H55M00S</duration>
      <summary>BoxGrinder : Grind your appliances easily</summary>
      <description>BoxGrinder is a set of tools that help you grind out appliances: preconfigured disk images with the operating system and requisite software ready to run on a selected virtualization platform. With a simple text definition file and a single command BoxGrinder will build a lean appliance from scratch, convert it to a target format, and deliver it to your chosen infrastructure.

</description>
      <class>PUBLIC</class>
      <status>CONFIRMED</status>
      <categories>JBoss.org Devroom</categories>
      <url>https://fosdem.org/2012//schedule/event/boxgrinder_grind_your_appliances_easily</url>
      <location>K.3.201</location>
      <attendee>Marek Goldmann</attendee>
    </vevent>
    <vevent>
      <method>PUBLISH</method>
      <uid>539@FOSDEM12@pentabarf.org</uid>
      <pentabarf:event-id>539</pentabarf:event-id>
      <pentabarf:event-slug>drools_planner_planning_optimization_by_example</pentabarf:event-slug>
      <pentabarf:event-tag>drools_planner_planning_optimization_by_example</pentabarf:event-tag>
      <pentabarf:title>Drools Planner: Planning optimization by example</pentabarf:title>
      <pentabarf:subtitle></pentabarf:subtitle>
      <pentabarf:language>English</pentabarf:language>
      <pentabarf:language-code>en</pentabarf:language-code>
      <pentabarf:track>JBoss.org Devroom</pentabarf:track>
      <pentabarf:start>2012-02-04 12:00:00 +0100</pentabarf:start>
      <pentabarf:end>2012-02-04 12:55:00 +0100</pentabarf:end>
      <pentabarf:duration>00:55:00</pentabarf:duration>
      <dtstart>20120204T120000</dtstart>
      <dtend>20120204T125500</dtend>
      <duration>00H55M00S</duration>
      <summary>Drools Planner: Planning optimization by example</summary>
      <description>Better planning algorithms can help save the environment, reduce costs and improve service quality. All organisations have planning problems, such as employee rostering, task scheduling, vehicle routing or bin packing. Yet, they hardly optimize those problems. Why? Because those problems are “NP-complete”: computationally very difficult and humanly impossible to optimize. 

Drools Planner optimizes such planning problems for normal Java programmers.</description>
      <class>PUBLIC</class>
      <status>CONFIRMED</status>
      <categories>JBoss.org Devroom</categories>
      <url>https://fosdem.org/2012//schedule/event/drools_planner_planning_optimization_by_example</url>
      <location>K.3.201</location>
      <attendee>Geoffrey De Smet</attendee>
    </vevent>
    <vevent>
      <method>PUBLISH</method>
      <uid>540@FOSDEM12@pentabarf.org</uid>
      <pentabarf:event-id>540</pentabarf:event-id>
      <pentabarf:event-slug>openshift</pentabarf:event-slug>
      <pentabarf:event-tag>openshift</pentabarf:event-tag>
      <pentabarf:title>Openshift</pentabarf:title>
      <pentabarf:subtitle></pentabarf:subtitle>
      <pentabarf:language>English</pentabarf:language>
      <pentabarf:language-code>en</pentabarf:language-code>
      <pentabarf:track>JBoss.org Devroom</pentabarf:track>
      <pentabarf:start>2012-02-04 13:00:00 +0100</pentabarf:start>
      <pentabarf:end>2012-02-04 13:55:00 +0100</pentabarf:end>
      <pentabarf:duration>00:55:00</pentabarf:duration>
      <dtstart>20120204T130000</dtstart>
      <dtend>20120204T135500</dtend>
      <duration>00H55M00S</duration>
      <summary>Openshift</summary>
      <description>You're using IaaS to build a large scale, multi-tenant, hosted service. At the end of the day, you're hosting other people's code in some form.

Your environment needs to be dynamic to properly utilize IaaS capabilities and meet user expectations. You need it to stay secure and controlled. Your users need to stay isolated from each other without feeling restricted. You need to control orchestration, workload management and security. You need to orchestrate to respond to changes in scale or failures at the IaaS level. You need workload management to control the resources a single user can consume and how contention is managed. Lastly, you need users to have access to as much as possible so they feel in control without risking your control of the overall system.

This talk will show by example how Red Hat's OpenShift Platform-as-a-Service uses MCollective for orchestration, SELinux for segmentation, Linux Control Groups for workload management and some core operational fundamentals applied to cloud architectures to tackle this challenge.</description>
      <class>PUBLIC</class>
      <status>CONFIRMED</status>
      <categories>JBoss.org Devroom</categories>
      <url>https://fosdem.org/2012//schedule/event/openshift</url>
      <location>K.3.201</location>
      <attendee>Grant Shipley</attendee>
    </vevent>
    <vevent>
      <method>PUBLISH</method>
      <uid>607@FOSDEM12@pentabarf.org</uid>
      <pentabarf:event-id>607</pentabarf:event-id>
      <pentabarf:event-slug>building_jboss_as7_for_fedora</pentabarf:event-slug>
      <pentabarf:event-tag>building_jboss_as7_for_fedora</pentabarf:event-tag>
      <pentabarf:title>JBoss AS7 : Building JBoss AS 7 for Fedora</pentabarf:title>
      <pentabarf:subtitle></pentabarf:subtitle>
      <pentabarf:language>English</pentabarf:language>
      <pentabarf:language-code>en</pentabarf:language-code>
      <pentabarf:track>JBoss.org Devroom</pentabarf:track>
      <pentabarf:start>2012-02-04 14:00:00 +0100</pentabarf:start>
      <pentabarf:end>2012-02-04 14:55:00 +0100</pentabarf:end>
      <pentabarf:duration>00:55:00</pentabarf:duration>
      <dtstart>20120204T140000</dtstart>
      <dtend>20120204T145500</dtend>
      <duration>00H55M00S</duration>
      <summary>JBoss AS7 : Building JBoss AS 7 for Fedora</summary>
      <description>While JBoss AS 7 (Application Server) in itself is FOSS (Free and Open Source Software) I would also like to make sure that the building process itself does not rely on anything but FOSS. 
Having a FOSS build process will truly liberate *any* Java project. 

With an overview of JBoss AS  7 the stage will be set for what components need to be FOSSilized.

Fedora, because it is the most passionate advocate of the FOSS build requirement, makes an excellent target OS for the initial prototype. Plus we can draw upon existing manpower and resources (from Fedora and EAP) to execute it.

Some issues encountered:
  Hibernate Core 4 needs Gradle to build
  RESTEasy depends on JAXB Reference Implementation
  JBoss VFS uses Microsoft code (during testing)

Relying on build tools like Maven, Gradle or Ivy can inadvertently lead to issues where (semi-) unknown dependencies creep into the build process (or worse the runtime operation).

If people give *no* thought to building their code FOSS style, making it fully FOSS becomes quite a choir (or even impossible). So if you care about FOSS, make sure your build is also FOSS.
Let's start here, let's start with JBoss AS 7.</description>
      <class>PUBLIC</class>
      <status>CONFIRMED</status>
      <categories>JBoss.org Devroom</categories>
      <url>https://fosdem.org/2012//schedule/event/building_jboss_as7_for_fedora</url>
      <location>K.3.201</location>
    </vevent>
    <vevent>
      <method>PUBLISH</method>
      <uid>541@FOSDEM12@pentabarf.org</uid>
      <pentabarf:event-id>541</pentabarf:event-id>
      <pentabarf:event-slug>jboss_forge_and_arquillian_two_missing_links_in_enterprise_java_development</pentabarf:event-slug>
      <pentabarf:event-tag>jboss_forge_and_arquillian_two_missing_links_in_enterprise_java_development</pentabarf:event-tag>
      <pentabarf:title>JBoss Forge / Arquillian: Two Missing Links in Enterprise Java Development</pentabarf:title>
      <pentabarf:subtitle></pentabarf:subtitle>
      <pentabarf:language>English</pentabarf:language>
      <pentabarf:language-code>en</pentabarf:language-code>
      <pentabarf:track>JBoss.org Devroom</pentabarf:track>
      <pentabarf:start>2012-02-04 15:00:00 +0100</pentabarf:start>
      <pentabarf:end>2012-02-04 15:55:00 +0100</pentabarf:end>
      <pentabarf:duration>00:55:00</pentabarf:duration>
      <dtstart>20120204T150000</dtstart>
      <dtend>20120204T155500</dtend>
      <duration>00H55M00S</duration>
      <summary>JBoss Forge / Arquillian: Two Missing Links in Enterprise Java Development</summary>
      <description>One common complaint you hear a lot about enterprise Java development is that it is quite a burden to get started. For a newbie, it takes a lot of knowledge and effort to even put the simplest JSF application to work. A second element that bothers a lot of people is that it is very difficult to verify that your enterprise components actually do what they are supposed to do. Even for seasoned enterprise developers integration testing can be a huge challenge.

Luckily two recent additions to the JBoss toolset come to the rescue. Arquillian is a container-oriented testing framework built on TestNG and JUnit. It takes down the barrier of bootstrapping the necessary infrastructure when trying to perform integration tests. It lets you test your components in their real target runtime environment using real enterprise services. Secondly, JBoss Forge is an incremental enhancement tool that lets you take an existing Java project and safely add in new functionality. Whether you want to set up JSF, use persistence or enable integration testing with Arquillian, it all becomes a real breeze.

Attend this session to learn how to take advantage of both these tools. You will see how they can be used to rapidly create, test and deploy enterprise Java applications. I will also show how they can be extended to put them even to greater use. They truly will turn out to be the missing links you have been looking for in enterprise Java Development.</description>
      <class>PUBLIC</class>
      <status>CONFIRMED</status>
      <categories>JBoss.org Devroom</categories>
      <url>https://fosdem.org/2012//schedule/event/jboss_forge_and_arquillian_two_missing_links_in_enterprise_java_development</url>
      <location>K.3.201</location>
      <attendee>Koen Aers</attendee>
    </vevent>
    <vevent>
      <method>PUBLISH</method>
      <uid>542@FOSDEM12@pentabarf.org</uid>
      <pentabarf:event-id>542</pentabarf:event-id>
      <pentabarf:event-slug>infinispan_where_open_source_java_and_in_memory_data_grids_converge</pentabarf:event-slug>
      <pentabarf:event-tag>infinispan_where_open_source_java_and_in_memory_data_grids_converge</pentabarf:event-tag>
      <pentabarf:title>Infinispan: where open source, Java and in-memory data grids converge</pentabarf:title>
      <pentabarf:subtitle></pentabarf:subtitle>
      <pentabarf:language>English</pentabarf:language>
      <pentabarf:language-code>en</pentabarf:language-code>
      <pentabarf:track>JBoss.org Devroom</pentabarf:track>
      <pentabarf:start>2012-02-04 16:00:00 +0100</pentabarf:start>
      <pentabarf:end>2012-02-04 16:55:00 +0100</pentabarf:end>
      <pentabarf:duration>00:55:00</pentabarf:duration>
      <dtstart>20120204T160000</dtstart>
      <dtend>20120204T165500</dtend>
      <duration>00H55M00S</duration>
      <summary>Infinispan: where open source, Java and in-memory data grids converge</summary>
      <description>In today's cloudy world of highly scalable applications, the database is increasingly the common culprit for most performance and scalability bottlenecks.  NoSQL is often touted as the solution to your data storage woes, but data grids are a very viable alternative as well, providing both a performance boost to those using relational databases in the form of a distributed cache, but also as a primary key/value store.  However, open source is crucial too since such systems often comprise of lots of cheap commodity-hardware nodes.  Proprietary solutions based on per-CPU licensing models may scale in terms of transactions per second, but fail to scale financially.  And this is where Infinispan comes in: the open source in-memory data grid for the JVM.

In this talk, Infinispan founder and project lead Manik Surtani will discuss the role of in-memory data grids in the Java ecosystem, in relation to cloud, PaaS and enterprise software.  Overlaps with NoSQL will also be discussed, as well as an update on JSR 107 and JSR 347, two JSRs that affect distributed caching and data grids.</description>
      <class>PUBLIC</class>
      <status>CONFIRMED</status>
      <categories>JBoss.org Devroom</categories>
      <url>https://fosdem.org/2012//schedule/event/infinispan_where_open_source_java_and_in_memory_data_grids_converge</url>
      <location>K.3.201</location>
      <attendee>Manik Surtani</attendee>
    </vevent>
    <vevent>
      <method>PUBLISH</method>
      <uid>543@FOSDEM12@pentabarf.org</uid>
      <pentabarf:event-id>543</pentabarf:event-id>
      <pentabarf:event-slug>recent_and_future_developments_in_the_rhq_systems_monitoring_and_management_framework</pentabarf:event-slug>
      <pentabarf:event-tag>recent_and_future_developments_in_the_rhq_systems_monitoring_and_management_framework</pentabarf:event-tag>
      <pentabarf:title>RHQ: Recent and future developments in the RHQ systems monitoring and management framework</pentabarf:title>
      <pentabarf:subtitle></pentabarf:subtitle>
      <pentabarf:language>English</pentabarf:language>
      <pentabarf:language-code>en</pentabarf:language-code>
      <pentabarf:track>JBoss.org Devroom</pentabarf:track>
      <pentabarf:start>2012-02-04 17:00:00 +0100</pentabarf:start>
      <pentabarf:end>2012-02-04 17:55:00 +0100</pentabarf:end>
      <pentabarf:duration>00:55:00</pentabarf:duration>
      <dtstart>20120204T170000</dtstart>
      <dtend>20120204T175500</dtend>
      <duration>00H55M00S</duration>
      <summary>RHQ: Recent and future developments in the RHQ systems monitoring and management framework</summary>
      <description>This talk will give a quick intro into the RHQ systems management and monitoring system and then show recent developments like "Dritf", the detection of changes of files and configurations, the REST api for easy access to collected data from other programming languages. Last but not least I want to point out some possible future development - especially in the area of alerting.</description>
      <class>PUBLIC</class>
      <status>CONFIRMED</status>
      <categories>JBoss.org Devroom</categories>
      <url>https://fosdem.org/2012//schedule/event/recent_and_future_developments_in_the_rhq_systems_monitoring_and_management_framework</url>
      <location>K.3.201</location>
      <attendee>Heiko Rupp</attendee>
    </vevent>
    <vevent>
      <method>PUBLISH</method>
      <uid>544@FOSDEM12@pentabarf.org</uid>
      <pentabarf:event-id>544</pentabarf:event-id>
      <pentabarf:event-slug>managing_workflows_and_business_rules_with_guvnor_and_the_jbpm_designer</pentabarf:event-slug>
      <pentabarf:event-tag>managing_workflows_and_business_rules_with_guvnor_and_the_jbpm_designer</pentabarf:event-tag>
      <pentabarf:title>Guvnor/jBPM: Managing workflows and business rules with Guvnor and the jBPM designer</pentabarf:title>
      <pentabarf:subtitle></pentabarf:subtitle>
      <pentabarf:language>English</pentabarf:language>
      <pentabarf:language-code>en</pentabarf:language-code>
      <pentabarf:track>JBoss.org Devroom</pentabarf:track>
      <pentabarf:start>2012-02-04 18:00:00 +0100</pentabarf:start>
      <pentabarf:end>2012-02-04 18:55:00 +0100</pentabarf:end>
      <pentabarf:duration>00:55:00</pentabarf:duration>
      <dtstart>20120204T180000</dtstart>
      <dtend>20120204T185500</dtend>
      <duration>00H55M00S</duration>
      <summary>Guvnor/jBPM: Managing workflows and business rules with Guvnor and the jBPM designer</summary>
      <description>The jBPM workflow engine and the Drools rule engine and the help you extract your business logic in workflows and rules, so you don’t need to hard code it in Java.

For example, suppose your application handles mortgage approval and you have a team of business experts at your disposal that can’t program. What happens if your business experts want to add a workflow action to send a mail upon each mortgage approval above 100 000 € with an applicant below age 30? How long does it take to hit production? Can the business experts easily read the changes before they hit production?

With Guvnor and the jBPM designer, those business experts can write and edit the workflows and business rules themselves. They can verify them and put them in poduction.</description>
      <class>PUBLIC</class>
      <status>CONFIRMED</status>
      <categories>JBoss.org Devroom</categories>
      <url>https://fosdem.org/2012//schedule/event/managing_workflows_and_business_rules_with_guvnor_and_the_jbpm_designer</url>
      <location>K.3.201</location>
      <attendee>Geoffrey De Smet</attendee>
      <attendee>Marco Rietveld</attendee>
    </vevent>
  </vcalendar>
</iCalendar>

