---
---
BEGIN:VCALENDAR
VERSION:2.0
PRODID:-//Pentabarf//Schedule 0.3//EN
CALSCALE:GREGORIAN
METHOD:PUBLISH
X-WR-CALDESC;VALUE=TEXT:Schedule for Embedded at FOSDEM 2012
X-WR-CALNAME;VALUE=TEXT:FOSDEM12
X-WR-TIMEZONE;VALUE=TEXT:Europe/Brussels
BEGIN:VEVENT
METHOD:PUBLISH
UID:697@FOSDEM12@fosdem.org
TZID:Europe-Brussels
DTSTART:20120204T110000
DTEND:20120204T120000
SUMMARY:NanoBSD and the art of Timekeeping with appliances.
DESCRIPTION: The time has come to make the switch from embedded Linux to embedded BSD....In this talk we will focus on the building of embedded appliances in the BSD world,and more specifically on using NanoBSD to create FreeBSD images that run onembedded systems.In the stock FreeBSD distribution an application (script) called NanoBSD is presentthat takes a configuration file and builds an image for a flash disk which then can beused on an embedded system. A short cookbook will be presented on the stepsneeded to actually create the image, and deploy it. Also the in-system upgrading ofthe image will be discussed.The use case we will present is an Stratum 0 NTP appliance that serves as networktime server using GPS with PPS synchronization. This appliance is capable ofproviding highly accurate time service to a network of servers and desktopmachines, even when disconnected from the internet. The example will use a Soekris4501 embedded board and an OEM hockey puck-style GPS device and some tricks touse the high-res timing on the board, together with a temperature controlled crystaloscillator.The contents of talk have previously been published by the presenter in ;login:.the USENIX periodical [1]
CLASS:PUBLIC
STATUS:CONFIRMED
CATEGORIES:Embedded
URL:https:/fosdem.org/2012/schedule/event/nanobsd
LOCATION:Lameere
ATTENDEE;ROLE=REQ-PARTICIPANT;CUTYPE=INDIVIDUAL;CN="Rudi van Drunen":invalid:nomail
END:VEVENT
BEGIN:VEVENT
METHOD:PUBLISH
UID:693@FOSDEM12@fosdem.org
TZID:Europe-Brussels
DTSTART:20120204T120000
DTEND:20120204T130000
SUMMARY:IIO, a new subsystem for I/O devices
DESCRIPTION: IIO (Industrial I/O) is a new kernel subsystem to allow easy userspaceinteraction with data capture devices (ADCs, DACs, accelerometers,light sensors, etc), while maintaining a high level of performance.Based on a recent driver contribution using this subsystem, we willdetail how to build a simple driver using this subsystem and explorehow to use advanced features like triggered captures or buffering. Wewill also explore IIO user space API and how to use it.
CLASS:PUBLIC
STATUS:CONFIRMED
CATEGORIES:Embedded
URL:https:/fosdem.org/2012/schedule/event/iio
LOCATION:Lameere
ATTENDEE;ROLE=REQ-PARTICIPANT;CUTYPE=INDIVIDUAL;CN="Maxime Ripard":invalid:nomail
END:VEVENT
BEGIN:VEVENT
METHOD:PUBLISH
UID:694@FOSDEM12@fosdem.org
TZID:Europe-Brussels
DTSTART:20120204T130000
DTEND:20120204T140000
SUMMARY:Linux (SoC) power management
DESCRIPTION: Due to the nature of the new SoC architectures the Power Managementneeds a new model for the various system latencies.The talk presents:- the concepts of system, devices, wake-up and resume latencies,- the recent changes in the devices framework for the latency, why andhow to make it generic,- the recent changes in the ARM/OMAP platform code for the system latency,- the problems encountered while modeling and measuring the various latencies,- a proposal on the model,- the planned changes in the device framework, the platform code and the APIs.This talk is oriented towards Linux power management developers andusers. The generic model covers all flavors of Linux, from theembedded device up to the multi processor computing server.
CLASS:PUBLIC
STATUS:CONFIRMED
CATEGORIES:Embedded
URL:https:/fosdem.org/2012/schedule/event/linux_soc_power
LOCATION:Lameere
ATTENDEE;ROLE=REQ-PARTICIPANT;CUTYPE=INDIVIDUAL;CN="Jean Pihet":invalid:nomail
END:VEVENT
BEGIN:VEVENT
METHOD:PUBLISH
UID:695@FOSDEM12@fosdem.org
TZID:Europe-Brussels
DTSTART:20120204T140000
DTEND:20120204T150000
SUMMARY:License issues in Android
DESCRIPTION: Android is rapidly becoming the primary vector through which open source software is entering into people's life, with new devices being announced almost daily. Unfortunately companies are cutting many corners, especially when it comes to licenses and quality assurance, because everyone is rushing their devices to market. The consequence is that many Android devices out there are not compliant with the licenses, with significant legal risk as a result, even though it is completely avoidable with a small investment in time and knowledge up front, saving a lot of time and money down the line. In this talk I want to highlight a few common violations, shatter a few myths about Android and provide some hints on how to improve the situation. This talk will not be about software patents
CLASS:PUBLIC
STATUS:CONFIRMED
CATEGORIES:Embedded
URL:https:/fosdem.org/2012/schedule/event/lincense_issues_in_android
LOCATION:Lameere
ATTENDEE;ROLE=REQ-PARTICIPANT;CUTYPE=INDIVIDUAL;CN="Armijn Hemel":invalid:nomail
END:VEVENT
BEGIN:VEVENT
METHOD:PUBLISH
UID:765@FOSDEM12@fosdem.org
TZID:Europe-Brussels
DTSTART:20120204T150000
DTEND:20120204T160000
SUMMARY:True open hardware: Opencores and OpenRISC
DESCRIPTION: This presentation will be delivered in two sections, first anintroduction to the OpenRISC project by Julius Baxter, followed by alook at embedded hardware development with Open Source IP cores usingthe OpenRISC platform and the IP available on OpenCores.org with OlofKindgren.The OpenRISC Project:This project is aimed at developing embedded RISC microprocessorarchitectures and open source RTL implementations. Since its beginningin 1999, the project has attracted anyone interested in CPUdevelopment and covers everything from ISA definition to RTLdescription writing and testing to simulator, tool chain and operatingsystem porting. The presentation will cover the motivation, recentprogress and future plans of the project.Open Source Embedded Hardware Development:Most Open Source embedded developers end their quest for a fully OpenSource system when they get the data sheets. For the FPGA/ASICdevelopers at OpenCores, this is where the fun part begins. Instead ofrelying on the kindness of the chip manufacturers to deliver thedesired SoC functionality, Open Source hardware developers simplydesign their own with the standard peripherals and custom hardwareacceleration that of choice. This requires Open Source IP cores and aframework to put it all together.This presentation will contain an introduction to some of the benefitsof open source hardware and an overview of OpenCores. The main focuswill be on how to use the OpenRISC Reference Platform System on Chip(ORPSoC) to build a custom SoC, which will be demonstrated on theOpenRISC FPGA development board.
CLASS:PUBLIC
STATUS:CONFIRMED
CATEGORIES:Embedded
URL:https:/fosdem.org/2012/schedule/event/opencores_openrisc_true_open_hw
LOCATION:Lameere
ATTENDEE;ROLE=REQ-PARTICIPANT;CUTYPE=INDIVIDUAL;CN="Julius Baxter":invalid:nomail
ATTENDEE;ROLE=REQ-PARTICIPANT;CUTYPE=INDIVIDUAL;CN="Olof Kindgren":invalid:nomail
END:VEVENT
BEGIN:VEVENT
METHOD:PUBLISH
UID:696@FOSDEM12@fosdem.org
TZID:Europe-Brussels
DTSTART:20120204T160000
DTEND:20120204T170000
SUMMARY:Why mobile text input is hard
DESCRIPTION: Mobile text input requires easy copy'n'paste interaction, reliablecursor positioning and the ability to edit (or fix) previously writtentext. For Asian markets, computer-assisted input of composed charactersis of paramount importance. A virtual keyboard alone cannot solve that.For input methods to work, sophisticated platform and toolkitintegration is required.The current general-purpose APIs that come with their respective inputmethod modules in UI toolkits such as GTK+ and Qt are not sufficientlyequipped for these tasks. Although the situation within the toolkits isslowly improving, Maliit - a flexible and cross-platform input methodframework - can further narrow this functionality gap.This talk will analyze problems of mobile text input and show how theywere solved on Nokia's N9.
CLASS:PUBLIC
STATUS:CONFIRMED
CATEGORIES:Embedded
URL:https:/fosdem.org/2012/schedule/event/why_mobile_text_input_is_hard
LOCATION:Lameere
ATTENDEE;ROLE=REQ-PARTICIPANT;CUTYPE=INDIVIDUAL;CN="Michael Hasselman":invalid:nomail
END:VEVENT
BEGIN:VEVENT
METHOD:PUBLISH
UID:758@FOSDEM12@fosdem.org
TZID:Europe-Brussels
DTSTART:20120204T170000
DTEND:20120204T180000
SUMMARY:OpenEmbedded and the Yocto Project - working together on a common Core
DESCRIPTION: OpenEmbedded and the Yocto Project have recently changed their structureto collaborate around a common base: OpenEmbedded-Core, with additionallayers being developed to be used on top. Moving to a multi-layer structurepresents both organisational advantages and challenges.This presentation will cover both technical and community aspects and willinclude recent developments in Yocto Project / OpenEmbedded structure, thecurrent layer landscape, best practices for developing new layers and growingexisting ones, and layer tooling enhancements developed as part of the YoctoProject that will benefit the entire OE community, as well as future plansalong those lines.
CLASS:PUBLIC
STATUS:CONFIRMED
CATEGORIES:Embedded
URL:https:/fosdem.org/2012/schedule/event/openembedded_yocto_common_core
LOCATION:Lameere
ATTENDEE;ROLE=REQ-PARTICIPANT;CUTYPE=INDIVIDUAL;CN="Paul Eggleton":invalid:nomail
END:VEVENT
BEGIN:VEVENT
METHOD:PUBLISH
UID:757@FOSDEM12@fosdem.org
TZID:Europe-Brussels
DTSTART:20120204T180000
DTEND:20120204T190000
SUMMARY:OpenWrt: Evolution of an Embedded Linux Distribution
DESCRIPTION: In this presentation, I will provide an overview of how big rewrite andredesign efforts have affected the development of the OpenWrt project.After showing two past examples of big structural changes, I willintroduce the current effort to redesign large parts of the OpenWrtuser space components.This redesign aims to bring some interesting approaches from theDesktop Linux world over to Embedded, without bringing along theamount of bloat that is usually associated with them.
CLASS:PUBLIC
STATUS:CONFIRMED
CATEGORIES:Embedded
URL:https:/fosdem.org/2012/schedule/event/openwrt_evolution_of_an_embedded_linux_distribution
LOCATION:Lameere
ATTENDEE;ROLE=REQ-PARTICIPANT;CUTYPE=INDIVIDUAL;CN="Felix Fietkau":invalid:nomail
END:VEVENT
BEGIN:VEVENT
METHOD:PUBLISH
UID:763@FOSDEM12@fosdem.org
TZID:Europe-Brussels
DTSTART:20120205T100000
DTEND:20120205T110000
SUMMARY:eLuaBrain: a 32-bit MCU based educational computer
DESCRIPTION: eLuaBrain is an experiment in educational computers with a number ofunique features. It is a low cost, completely autonomous computerdesigned to work with low cost peripherals (PS/2 keyboard on input anda standard VGA monitor on output). Its main goal is to offer anotherperspective on education in general and training IT professionals inparticular. Modern computers are difficult to understand at thehardware level even for experienced IT professionals; at the sametime, there is a growing trend in most modern computer languages tocompletely ignore the hardware on which they run and focus entirely onprogramming concepts instead. By contrast, eLuaBrain offers the wholeexperience in a single package. Its hardware is easy to understand(and hack) and the on-board software offers easy ways to interact withthe hardware, thanks to the features provided by the eLua open sourceproject. eLua is built around the programming language Lua, which is arelatively compact language, but comes packed with lots of features,which makes it very suitable for teaching programming concepts. WitheLuaBrain it is natural to teach programming and hardware design inparallel, which gives students a complete image on thehardware-software interactions.At the hardware level, it is built around a 32-bit CPU (a Cortex-M3core) with 1M of external RAM. It also features TCP/IP networkconnectivity, SD card storage and a low power radio link. eLua bringsa MCU-friendly Lua interpreter and hardware support modules into theequation, while the built-in code editor and on-line help system makeeLuaBrain a truly autonomous platform. A very low footprint, UDP basedremote file system can be used to easily share files with any desktopmachine.The hardware and software behind eLuaBrain are open source, free touse for both commercial and non-commercial projects. eLuaBrain comeswith a number of sample applications meant to demonstrate the platformfeatures and to serve as a starting point for future applications.These include a RSS reader, an IRC client, a Web server and (ofcourse) games.This presentation will start with an overview of eLua, after whichwe'll take a deeper look at the implementation of eLuaBrain at bothhardware and software level and its future directions of development.If time allows and the right hardware is in place, a live demo of theplatform will also be provided.
CLASS:PUBLIC
STATUS:CONFIRMED
CATEGORIES:Embedded
URL:https:/fosdem.org/2012/schedule/event/eluabrain_educational_computer
LOCATION:Lameere
ATTENDEE;ROLE=REQ-PARTICIPANT;CUTYPE=INDIVIDUAL;CN="Raman Gopalan":invalid:nomail
ATTENDEE;ROLE=REQ-PARTICIPANT;CUTYPE=INDIVIDUAL;CN="Bogdan Marinescu":invalid:nomail
END:VEVENT
BEGIN:VEVENT
METHOD:PUBLISH
UID:698@FOSDEM12@fosdem.org
TZID:Europe-Brussels
DTSTART:20120205T110000
DTEND:20120205T120000
SUMMARY:Aseba robot programming
DESCRIPTION: Aseba is an open-source project providing a set of tools thatallow beginners to program robots easily and efficiently.Technically speaking, Aseba is an event-based architecture fordistributed control of mobile robots. It targets single- ormulti-processor robots and simulations. The core of Aseba is alightweight virtual machine tiny enough to run onmicrocontrollers. With Aseba, we program robots in aoctave-style scripting language using an integrated developmentenvironment. This environment provides several featuresimportant for robotics, such as real-time inspection ofsensor/actuator data, integrating plotting, on-typingcompilation, distributed debugging, and instant code upload tothe robot. Compared to alternatives (for instance Arduino andLego Mindstorm), Aseba focuses on text-based programming buttakes advantage of the tight integration between the environmentand the robot to provide an interactive robot programmingexperience.Aseba stems from research in miniature mobile robotics, in whichsmall robots with multiple microcontrollers have risenarchitectural questions (see papers under links). In addition,Aseba has found a natural application in educational roboticswith the Thymio low-cost robot. We have also demonstrated Asebain simulation and on a group of e-puck robots. Aseba integrateswith D-Bus and ROS, allowing access to microcontrollers fromhigh-level languages.I am the initiator and maintainer of the Aseba technology andone of the most active contributors. I propose to present a talkwith the following content: * Genesis, why did we develop such a thing. * Technical overview, with discussion of the design choices. * Presentation of the Aseba in the robotic-research context. * Live demonstration of Aseba in the educational context using  the Thymio robot. * Future directions. * Conclusion and question answering.I started developing Aseba as part of my PhD work in the Mobotsresearch group at EPFL. Currently, a community comprisingmembers of the Mobots group, of the mobsya association, of theASL at ETH Zürich and other individuals maintain and furtherdevelop Aseba.
CLASS:PUBLIC
STATUS:CONFIRMED
CATEGORIES:Embedded
URL:https:/fosdem.org/2012/schedule/event/aseba
LOCATION:Lameere
ATTENDEE;ROLE=REQ-PARTICIPANT;CUTYPE=INDIVIDUAL;CN="Stéphane Magnenat":invalid:nomail
END:VEVENT
BEGIN:VEVENT
METHOD:PUBLISH
UID:699@FOSDEM12@fosdem.org
TZID:Europe-Brussels
DTSTART:20120205T120000
DTEND:20120205T130000
SUMMARY:Safe upgrade of embedded systems
DESCRIPTION: After deploying an embedded system, it is desirable to be able to upgrade the firmware, in order to add new features or to solve bugs. However, it is often difficult and expensive for a technician to get physical access to the device(s). Therefore, it should be possible to perform the upgrade remotely, which also means that it should be secure and survive any kind of failure. In the course of their career the consultants at Essensium/Mind have encountered many failure paths and solutions of how to deal with them. This includes issues like bad firmware, power failure, communication problems, security issues, flash corruption and bootloader bugs. Solutions include fall-back firmware, watchdogs, journalling filesystems, backup media and package managers. But in the end, it turns out that there is no silver bullet and that the best upgrade approach mostly depends on how the system is used.
CLASS:PUBLIC
STATUS:CONFIRMED
CATEGORIES:Embedded
URL:https:/fosdem.org/2012/schedule/event/safe_upgrade_of_embedded_systems
LOCATION:Lameere
ATTENDEE;ROLE=REQ-PARTICIPANT;CUTYPE=INDIVIDUAL;CN="Arnaut Vandecappelle":invalid:nomail
END:VEVENT
BEGIN:VEVENT
METHOD:PUBLISH
UID:700@FOSDEM12@fosdem.org
TZID:Europe-Brussels
DTSTART:20120205T130000
DTEND:20120205T140000
SUMMARY:Using Qt for non-graphical applications
DESCRIPTION: The Qt framework is best known by most developers as a graphicaltoolkit library, which allows to build graphical interfaces withwindows, buttons, checkboxes and drop-down lists.However, Qt is not limited to graphical application development andthrough this talk, we would like to highlight the multiple featuresthat Qt offers to embedded Linux developers developping non-graphicalapplications.Based on the experience of a real non-graphical application developpedfor a customer, we will detail how Qt has helped integrating featuressuch as communication with multiple devices over serial ports,communication with a GSM modem, XML parsing, HTTP requests,communication with Linux input devices, and more.
CLASS:PUBLIC
STATUS:CONFIRMED
CATEGORIES:Embedded
URL:https:/fosdem.org/2012/schedule/event/using_qt_for_non_graphical_applications
LOCATION:Lameere
ATTENDEE;ROLE=REQ-PARTICIPANT;CUTYPE=INDIVIDUAL;CN="Thomas Petazzoni":invalid:nomail
END:VEVENT
BEGIN:VEVENT
METHOD:PUBLISH
UID:701@FOSDEM12@fosdem.org
TZID:Europe-Brussels
DTSTART:20120205T140000
DTEND:20120205T150000
SUMMARY:EFL the upcoming embedded UI toolkit
DESCRIPTION: The Enlightenment Foundation Libraries is a UI toolkit designed forthe embeded world in mind. We have now released version 1.1 afteralmost one year of work. This new version come with new features, alot of speed and memory improvement, improved portability (weofficially support Windows now) and no API or ABI break. It is a proofof the will of Enlightenment team to provide a reliable base for anyserious work. We are now working on preparing a release for anotherset of important libraries and also finishing the last few items inthe Enlightenment DR 17 todo list. With Tizen project and the growingcontribution of Samsung, 2012 is going to be a very interesting yearfor the Enlightenment project and we will talk about just that.
CLASS:PUBLIC
STATUS:CONFIRMED
CATEGORIES:Embedded
URL:https:/fosdem.org/2012/schedule/event/efl_the_upcoming_ui_toolkit
LOCATION:Lameere
ATTENDEE;ROLE=REQ-PARTICIPANT;CUTYPE=INDIVIDUAL;CN="Cedric Bail":invalid:nomail
END:VEVENT
BEGIN:VEVENT
METHOD:PUBLISH
UID:759@FOSDEM12@fosdem.org
TZID:Europe-Brussels
DTSTART:20120205T150000
DTEND:20120205T160000
SUMMARY:PMH: Home Automation made right™
DESCRIPTION: PMH is a home automation system built from the ground up to be easy to use, modular and as open as possible. Our software and hardware are completely open source, with source code, schematics and CAD files available online. PMH consists of 3 layers. The hardware layer, the überdust layer and the apps.In the hardware layer, we use a wireless sensor network with sensor nodes and actuators that communicate with each other using the low-power IEEE 802.15.4 protocol and with a computer that acts as the main controller. The wireless sensor network consists mostly of Arduino nodes which control lighting, heating/air conditioning and electrical devices while at the same time using sensors to measure things like power consumption, temperature, light, movement, air quality etc.Überdust is responsible to bridge the other two layers by capturing and saving the data from the WSN to a central database, and provide easy to use interfaces (i.e. REST, Web Sockets) to the application layer. This way, applications can get sensor values from the wireless sensor nodes, and control the nodes accordingly.In the application layer, we have developed a web and smartphone application that gives users the ability to remotely control the system, view the current status of the various sensors and set automated behaviors such as turning on the lights when there are people in the room, sending a notification to the user's smartphone when someone enters your room, turning on the water boiler on predefined times, etc.Last but not least, due to the modular and open source nature of our system, its easy to add additional data providers in the hardware layer, such as an arduino with additional sensors, or even your computer and smartphone (i.e. your smartphone's accelerometer, the status of your server). It's just as easy to develop your own apps using our APIs, and extend the capabilities of the system to meet your own needs (remote controlled BBQ anyone?)
CLASS:PUBLIC
STATUS:CONFIRMED
CATEGORIES:Embedded
URL:https:/fosdem.org/2012/schedule/event/phm_home_automation_made_right
LOCATION:Lameere
ATTENDEE;ROLE=REQ-PARTICIPANT;CUTYPE=INDIVIDUAL;CN="Vasileios Georgitzikis":invalid:nomail
END:VEVENT
BEGIN:VEVENT
METHOD:PUBLISH
UID:702@FOSDEM12@fosdem.org
TZID:Europe-Brussels
DTSTART:20120205T160000
DTEND:20120205T170000
SUMMARY:Simple and powerful Android code with AndroidAnnotations!
DESCRIPTION: Is your Android code easy to write, to read and to maintain?AndroidAnnotations is an Open Source Android framework that aims at simplifying your Android developments, without performance cost.AndroidAnnotations helps you build Android Applications faster because it allows you to focus on your business problem rather than the plumbing code that connects components and systems. Simply put, AndroidAnnotations generates the boring boilerplate code of your application at compile time, using the Java 6 Annotation Processing API.The presentation will start by explaining the key concepts, followed by a live coding of a simple Android application, to demonstrate AndroidAnnotations' advantages.
CLASS:PUBLIC
STATUS:CONFIRMED
CATEGORIES:Embedded
URL:https:/fosdem.org/2012/schedule/event/androidannotations
LOCATION:Lameere
ATTENDEE;ROLE=REQ-PARTICIPANT;CUTYPE=INDIVIDUAL;CN="Pierre-Yves Ricau":invalid:nomail
END:VEVENT
END:VCALENDAR
